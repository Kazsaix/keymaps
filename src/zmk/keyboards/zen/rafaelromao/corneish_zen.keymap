/*
*
* Copyright (c) 2022 Rafael Romão
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };
};

#define ROMAK 0
#define NUMPAD 1
#define ACCENT 2
#define MACROS 3
#define LOWER 4
#define RAISE 5
#define NAV_F 6
#define MED 7
#define NAV 8
#define LOCK_KB 9
#define MAINT 10

&sl {
    release-after-ms = <2000>;
};

&sk {
    release-after-ms = <2000>;
};

/ {
    behaviors {
        hm: homerow-mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homehow-mods";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        msl: layer-tap-with-stick-layer {
            compatible = "zmk,behavior-hold-tap";
            label = "layer-tap-with-stick-layer";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&mo>, <&sl>;
        };
        msk: layer-tap-with-stick-key {
            compatible = "zmk,behavior-hold-tap";
            label = "layer-tap-with-stick-key";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&mo>, <&sk>;
        };
    };
};

/ {
    macros {
        mc_copy: mc_copy {
            label = "Copy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_tap &kp C>
                , <&macro_release &kp LCMD>
                ;
        };
        mc_paste: mc_paste {
            label = "Paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_tap &kp V>
                , <&macro_release &kp LCMD>
                ;
        };
        mc_save: mc_save {
            label = "Save";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_tap &kp S>
                , <&macro_release &kp LCMD>
                ;
        };
        mc_save_esc: mc_save_esc {
            label = "Save + Esc";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCMD>
                , <&macro_tap &kp S>
                , <&macro_release &kp LCMD>
                , <&macro_tap &kp ESC>
                ;
        };
        mc_seln: mc_seln {
            label = "Select Line";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp HOME>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp END>
                , <&macro_release &kp LSHFT>
                ;
        };
        mc_zout: mc_zout {
            label = "Zoom Out";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp MINUS>
                , <&macro_release &kp LGUI>
                ;
        };
        mc_zin: mc_zin {
            label = "Zoom In";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp PLUS>
                , <&macro_release &kp LGUI>
                ;
        };
    };
};

/ {
    accents {
        ac_agrv: ac_agrv {
            wait-ms = <0>;
            label = "à";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp GRAVE &kp A>;
        };
        ac_acir: ac_acir {
            wait-ms = <0>;
            label = "â";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp CARET &kp A>;
        };
        ac_aacu: ac_aacu {
            wait-ms = <0>;
            label = "á";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SINGLE_QUOTE &kp A>;
        };
        ac_atil: ac_atil {
            wait-ms = <0>;
            label = "ã";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp TILDE &kp A>;
        };
        ac_eacu: ac_eacu {
            wait-ms = <0>;
            label = "é";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SINGLE_QUOTE &kp E>;
        };
        ac_ecir: ac_ecir {
            wait-ms = <0>;
            label = "ê";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp CARET &kp E>;
        };
        ac_oacu: ac_oacu {
            wait-ms = <0>;
            label = "ó";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SINGLE_QUOTE &kp O>;
        };
        ac_ocir: ac_ocir {
            wait-ms = <10>;
            label = "ô";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp CARET &kp O>;
        };
        ac_otil: ac_otil {
            wait-ms = <0>;
            label = "õ";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp TILDE &kp O>;
        };
        ac_uacu: ac_uacu {
            wait-ms = <0>;
            label = "ú";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SINGLE_QUOTE &kp U>;
        };
        ac_iacu: ac_iacu {
            wait-ms = <0>;
            label = "à";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SINGLE_QUOTE &kp I>;
        };
        ac_accdi: ac_ccdi {
            wait-ms = <0>;
            label = "ç";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SINGLE_QUOTE &kp C>;
        };
    };
};

/ {
    symbols {
        mc_bti: mc_bti {
            wait-ms = <0>;
            label = "`";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SQT &kp SPACE>;
        };
        mc_dqo: mc_dqo {
            wait-ms = <0>;
            label = "quot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp DQT &kp SPACE>;
        };
        mc_sqo: mc_sqo {
            wait-ms = <0>;
            label = "'";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SINGLE_QUOTE &kp SPACE>;
        };
        mc_tilde: mc_tilde {
            wait-ms = <0>;
            label = "~";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp TILDE &kp SPACE>;
        };
        mc_caret: mc_caret {
            wait-ms = <0>;
            label = "^";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp CARET &kp SPACE>;
        };
        mm_tilde: mm_tilde {
            label = "Dead ~";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mc_tilde>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mm_caret: mm_caret {
            label = "Dead ^";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mc_caret>, <&kp CARET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mc_slash: mc_slash {
            wait-ms = <0>;
            label = "Slash";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SLASH>;
        };
        mc_backslash: mc_backslash {
            wait-ms = <0>;
            label = "Backslash";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp BACKSLASH>;
        };
        ht_slash: ht_slash {
            label = "Slash Backslash";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&mc_backslash &mc_slash>;
        };
        mc_and: mc_and {
            wait-ms = <0>;
            label = "&&";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp AMPS &kp AMPS>;
        };
        mm_and: mm_and {
            label = "&";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mc_and>, <&kp AMPS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mc_or: mc_or {
            wait-ms = <0>;
            label = "||";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp PIPE &kp PIPE>;
        };
        mm_or: mm_or {
            label = "|";
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mc_or>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        ht_and: ht_and {
            label = "&& ||";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&mm_or &mm_and>;
        };
        td_med: td_med {
            label = "MED SHIFT CAPSWORD";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&msk MED LSHFT>, <&caps_word>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_enter {
            timeout-ms = <50>;
            layers = <ROMAK NUMPAD>;
            key-positions = <17 18 33>;
            bindings = <&kp ENTER>;
        };
        combo_tab {
            timeout-ms = <50>;
            layers = <ROMAK NUMPAD>;
            key-positions = <7 8 33>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <50>;
            layers = <ROMAK NUMPAD>;
            key-positions = <1 2 32>;
            bindings = <&kp ESC>;
        };
        combo_save {
            timeout-ms = <50>;
            layers = <ROMAK NUMPAD>;
            key-positions = <11 12 32>;
            bindings = <&mc_save>;
        };
        combo_esc_save {
            timeout-ms = <50>;
            layers = <NAV>;
            key-positions = <1 2>;
            bindings = <&mc_save_esc>;
        };
        combo_unds {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <21 22>;

            bindings = <&kp UNDERSCORE>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <27 28>;
            bindings = <&kp SEMICOLON>;
        };
        combo_x {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <26 27>;
            bindings = <&kp X>;
        };
        combo_z {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <22 23>;
            bindings = <&kp Z>;
        };
        combo_copy_l {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <22 23 32>;
            bindings = <&mc_copy>;
        };
        combo_paste_l {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <12 13 32>;
            bindings = <&mc_paste>;
        };
        combo_copy_r {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <26 27 33>;
            bindings = <&mc_copy>;
        };
        combo_paste_r {
            timeout-ms = <50>;
            layers = <ROMAK>;
            key-positions = <16 17 33>;
            bindings = <&mc_paste>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        label = "ROMAK";
                        bindings = <
   &mc_sqo         &kp F           &kp D           &kp W           &kp Z           &kp X           &kp L           &kp O           &kp U           &ac_accdi   
   &lt MACROS R    &hm LSHFT N     &hm LCTRL S     &hm LGUI T      &kp G           &kp V           &hm RGUI H      &hm RCTRL A     &hm RSHFT E     &lt MACROS I 
   &hm RALT Q      &kp B           &kp C           &hm LALT P      &kp K           &kp J           &hm LALT M      &kp COMMA       &kp DOT         &hm RALT Y
                                   &lt RAISE BSPC  &msl NAV ACCENT &lt LOWER SPACE &lt RAISE BSPC  &td_med         &lt LOWER SPACE
                        >;
                };
                numpad_layer {
                        label = "NUMPAD";
                        bindings = <
   &none           &kp F9          &kp F8          &kp F7          &none           &none           &kp N7          &kp N8          &kp N9          &none    
   &kp F15         &hm LSHFT F6    &hm LCTRL F5    &hm LGUI F4     &kp F11         &kp COLON       &hm RGUI N4     &hm RCTRL N5    &hm RSHFT N6    &lt MACROS DOT 
   &hm RALT F14    &kp F3          &kp F2          &hm LALT F1     &kp F10         &tog NUMPAD     &hm LALT N1     &kp N2          &kp N3          &hm RALT COMMA
                                   &trans          &msl NAV F12    &trans          &trans          &msk MED N0     &trans
                        >;
                };
                accents_layer {
                        label = "ACCENT";
                        bindings = <
   &none           &none           &kp X           &kp CARET       &none           &none           &ac_otil        &ac_oacu        &ac_uacu        &none    
   &kp GRAVE       &kp DQT         &kp SQT         &kp Z           &kp TILDE       &ac_agrv        &ac_atil        &ac_aacu        &ac_eacu        &ac_iacu 
   &none           &none           &ac_accdi       &none           &none           &none           &ac_acir        &ac_ocir        &ac_ecir        &none
                                   &trans          &trans          &kp SPACE       &kp BSPC        &trans          &trans
                        >;
                };
                macros_layer {
                        label = "MACROS";
                        bindings = <
   &none           &kp ESC         &none           &none           &none           &none           &none         &kp ENTER       &kp TAB       &none    
   &none           &none           &none           &none           &none           &none           &mc_seln      &mc_zout        &mc_zin       &none  
   &none           &none           &none           &none           &none           &none           &none         &none           &none         &none 
                                   &trans          &trans          &kp BSPC        &kp SPACE       &trans        &trans
                        >;
                };
                lower_layer {
                        label = "LOWER";
                        bindings = <
   &none           &kp LPAR        &kp RPAR        &mm_caret       &none           &none           &kp N7        &kp N8          &kp N9        &none    
   &mc_bti         &mc_dqo         &mc_sqo         &mm_and         &mm_tilde       &kp COLON       &kp N4        &kp N5          &kp N6        &lt MACROS DOT  
   &kp AT          &kp LBKT        &kp RBKT        &kp QMARK       &kp HASH        &none           &kp N1        &kp N2          &kp N3        &kp COMMA 
                                   &trans          &trans          &trans          &trans          &msk MED N0   &trans
                        >;
                };
                raise_layer {
                        label = "RAISE";
                        bindings = <
   &none           &kp F9          &kp F8          &kp F7          &none           &none           &kp DOLLAR    &kp LBRC        &kp RBRC      &none    
   &kp F15         &kp F6          &kp F5          &kp F4          &kp F11         &kp COLON       &kp MINUS     &kp EQUAL       &kp EXCL      &kp PLUS  
   &kp F14         &kp F3          &kp F2          &kp F1          &kp F10         &kp PERCENT     &ht_slash     &kp LT          &kp GT        &kp STAR
                                   &trans          &kp F12         &trans          &trans          &trans        &trans
                        >;
                };
                fixed_navigation_layer {
                        label = "NAV";
                        bindings = <
   &none           &kp ESC         &mc_save        &none           &none           &none           &none         &kp PAGE_DOWN   &kp PAGE_UP   &none    
   &none           &sk LSHIFT      &sk LCTRL       &sk LALT        &none           &tog NAV_F      &kp LEFT      &kp DOWN        &kp UP        &kp RIGHT
   &sk RALT        &none           &none           &sk LGUI        &none           &none           &kp DEL       &kp HOME        &kp END       &kp INS
                                   &trans          &trans          &trans          &trans          &trans        &trans
                        >;
                };
                media_layer {
                        label = "MEDIA";
                        bindings = <
   &none           &kp ESC         &mc_save        &none           &none           &none           &none         &kp ENTER       &kp TAB       &none    
   &none           &kp LSHIFT      &kp LCTRL       &kp LALT        &none           &tog NAV_F      &none         &none           &none         &none
   &kp RALT        &none           &none           &kp LGUI        &none           &tog NUMPAD     &none         &none           &none         &none 
                                   &trans          &mo MAINT       &trans          &trans          &trans        &trans
                        >;
                };
                navigation_layer {
                        label = "NAV";
                        bindings = <
   &none           &kp ESC         &mc_save        &none           &none           &none           &none         &kp PAGE_DOWN   &kp PAGE_UP   &none    
   &none           &sk LSHIFT      &sk LCTRL       &sk LALT        &none           &tog NAV_F      &kp LEFT      &kp DOWN        &kp UP        &kp RIGHT
   &sk RALT        &none           &none           &sk LGUI        &none           &none           &kp DEL       &kp HOME        &kp END       &kp INS
                                   &trans          &trans          &trans          &trans          &mo MAINT     &trans
                        >;
                };
                lock_layer {
                        label = "LOCK";
                        bindings = <
   &none           &none           &none           &none           &none           &none           &none         &none           &none         &none    
   &none           &none           &none           &none           &none           &none           &none         &none           &none         &none  
   &none           &none           &none           &none           &none           &none           &none         &none           &none         &none 
                                   &none           &trans          &none           &none           &trans        &none
                        >;
                };
                maintenance_layer {
                        label = "MAINT";
                        bindings = <
   &none           &none           &none           &none           &none           &none           &none         &none           &kp K_SLEEP   &none    
   &none           &none           &none           &none           &bootloader     &bootloader     &none         &none           &tog LOCK_KB  &kp K_POWER  
   &none           &none           &none           &none           &none           &none           &bt BT_SEL 0  &bt BT_PRV      &bt BT_NXT    &bt BT_CLR 
                                   &trans          &trans          &trans          &trans          &trans        &trans
                        >;
                };
        };
};
