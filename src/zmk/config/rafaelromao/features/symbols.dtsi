/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
    #define SYMBOL(NAME, SYMBOLS) \
        NAME: NAME { \
            compatible = "zmk,behavior-macro"; \
            label = ZMK_MACRO_STRINGIFY(NAME); \
            #binding-cells = <0>; \
            wait-ms = <0>; \
            tap-ms = <0>; \
            bindings = <&macro_tap SYMBOLS>; \
        };

    #define SHIFTED_SYMBOL(NAME, UNSHIFTED, SHIFTED) \
        NAME: NAME { \
            compatible = "zmk,behavior-mod-morph"; \
            label = ZMK_MACRO_STRINGIFY(NAME); \
            #binding-cells = <0>; \
            bindings = <UNSHIFTED>, <SHIFTED>; \
            mods = <(MOD_LSFT|MOD_RSFT)>; \
        };

    #define TAPHOLD_SYMBOL(NAME, TAP, HOLD) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            label = ZMK_MACRO_STRINGIFY(NAME); \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            flavor = "tap-preferred"; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            global-quick-tap; \
            bindings = <HOLD>, <TAP>; \
        };

    symbols {
        SYMBOL(mc_bti,   &kp GRAVE &kp SPACE)
        SYMBOL(mc_dqo,   &kp DQT &kp SPACE)
        SYMBOL(mc_sqo,   &kp SQT &kp SPACE)
        SYMBOL(mc_tilde, &kp TILDE &kp SPACE)
        SYMBOL(mc_caret, &kp CARET &kp SPACE)
        SYMBOL(mc_and,   &kp AMPS &kp AMPS)
        SYMBOL(mc_or,    &kp PIPE &kp PIPE)

        SHIFTED_SYMBOL(mm_and, &mc_and, &kp AMPS)
        SHIFTED_SYMBOL(mm_or,  &mc_or,  &kp PIPE)

        TAPHOLD_SYMBOL(th_and, &mm_and, &mm_or)
    };
};
